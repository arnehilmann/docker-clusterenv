#!/usr/bin/env python
"""
Usage:
    start-machine [HOSTNAME] [--mount-dir=DIRECTIVE...] [--link-files=FILES:PATH...] [--port=MAPPING...] [--post-init-machine=FILE] [--interactive]
"""

import os
import subprocess
import sys

from docopt import docopt
arguments = docopt(__doc__)

print "starting a docker-clusterenv machine"

DOCKER_IMAGE = "clusterenv/base"

OUT_DIR = "out"
LOCAL_DOCKER_CLUSTERENV_DIR = "/docker-clusterenv"
LOCAL_DIR = "/local-fs"
LOCAL_DNSMASQ_DIR = "/etc/dnsmasq.d/"
LOCAL_OUT_DIR = os.path.join(LOCAL_DIR, OUT_DIR)

DNSMASQ_DIR = os.path.abspath(os.path.join(OUT_DIR, "etc", "dnsmasq.d"))


print "-- initializing environment"

print "---- checking for needed directories"
if not os.path.exists(OUT_DIR):
    os.makedirs(OUT_DIR)

if not os.path.exists(DNSMASQ_DIR):
    os.makedirs(DNSMASQ_DIR)

print "-- determining pathes and file names"
docker_clusterenv_dir = os.path.abspath(os.path.dirname(sys.argv[0]))
print "---- docker-clusterenv home: %s" % docker_clusterenv_dir

init_machine = LOCAL_DOCKER_CLUSTERENV_DIR + "/init-machine"

print "-- parsing mount directives"
mount_directives = ["-v %s" % os.path.join(os.getcwd(), md)
        for md in arguments["--mount-dir"]]
mount_directives.append("-v %s:%s:ro" % (docker_clusterenv_dir, LOCAL_DOCKER_CLUSTERENV_DIR))
mount_directives.append("-v %s:%s:rw" % (DNSMASQ_DIR, LOCAL_DNSMASQ_DIR))
mount_directives.append("-v %s:%s:rw" % (os.getcwd(), LOCAL_DIR))
mount_directives = " ".join(mount_directives)

port_directives = " ".join(["-p %s" % pd for pd in arguments["--port"]])

print "-- checking arguments for machine post-startup"
pass_thru = ["%s=%s" % (pass_thru, param)
    for pass_thru in ["--link-files"]
    for param in arguments[pass_thru]
]
post_init_machine = arguments["--post-init-machine"]
if post_init_machine:
    post_init_machine = os.path.join(LOCAL_DIR, post_init_machine)
    pass_thru.append("--post-init-machine=%s" % post_init_machine)
pass_thru = " ".join(pass_thru)

if arguments["--interactive"]:
    print "-- interactive mode enabled"
    action_mode = "-i -t"
    script = "--cmd='/bin/bash -i'"
else:
    print "-- daemon mode enabled"
    action_mode = "-d"
    script = "--cmd='/usr/sbin/sshd -D'"


print "-- docker command to be executed"
hostname = arguments["HOSTNAME"]
hostname_arg = "-h %s" % hostname if hostname else ""
cmd = "docker run %s %s -dns 127.0.0.1 %s -w %s %s %s %s %s %s" % (
    action_mode,
    hostname_arg,
    mount_directives,
    LOCAL_DIR,
    port_directives,
    DOCKER_IMAGE,
    init_machine,
    pass_thru,
    script
)
print "---- %s" % cmd

exit_code = subprocess.call(cmd, shell=True)

sys.exit(exit_code)
